# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

# include fonts/font.conf
# include fonts/roboto.conf
include fonts/robotomono.conf
# include fonts/jetbrains.conf
font_size 24.0
# macos_thicken_font 1
disable_ligatures active always
# symbol_map U+E0A0-U+E0A3,U+E0C0-U+E0C7 PowerlineSymbols

#: }}}

#: Cursor customization {{{

cursor_shape block
cursor_blink_interval 1
cursor_stop_blinking_after 15.0

#: }}}

#: Scrollback {{{

scrollback_lines 10000
# scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER
scrollback_fill_enlarged_window yes

#: }}}

#: Mouse {{{

mouse_hide_wait 3.0
# url_color #0087bd
# url_style curly
# open_url_modifiers kitty_mod
# open_url_with default
# url_prefixes http https file ftp gemini irc gopher mailto news git
detect_urls yes
copy_on_select yes
strip_trailing_spaces always

#: }}}

#: Performance tuning {{{

# repaint_delay 10
# input_delay 3
# sync_to_monitor yes

#: }}}

#: Terminal bell {{{

enable_audio_bell no
# visual_bell_duration 0.0
window_alert_on_bell none
bell_on_tab none
command_on_bell none

#: }}}

#: Window layout {{{

# remember_window_size  yes
# initial_window_width  640
# initial_window_height 400

# enabled_layouts *
# window_resize_step_cells 2
# window_resize_step_lines 2
# window_border_width 0.5pt
# draw_minimal_borders yes
# window_margin_width 0
# single_window_margin_width -1
# window_padding_width 0
# placement_strategy center
# active_border_color #00ff00
# inactive_border_color #cccccc
# bell_border_color #ff5a00
inactive_text_alpha 0.3
# hide_window_decorations no
# resize_debounce_time 0.1
# resize_draw_strategy static
# resize_in_steps no
# confirm_os_window_close 0

#: }}}

#: Tab bar {{{

# tab_bar_edge bottom
# tab_bar_margin_width 0.0
# tab_bar_style fade
# tab_bar_min_tabs 2
# tab_switch_strategy previous
# tab_fade 0.25 0.5 0.75 1
# tab_separator " â”‡"
# tab_powerline_style angled
# tab_activity_symbol none
# tab_title_template "{title}"
# active_tab_title_template none
# active_tab_foreground   #000
# active_tab_background   #eee
# active_tab_font_style   bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal
# tab_bar_background none

#: }}}

#: Color scheme {{{

# background_opacity 1.0
# background_image none
#: Path to a background image. Must be in PNG format.

# background_image_layout tiled
# background_image_linear yes
# dynamic_background_opacity no
# background_tint 0.0
# dim_opacity 0.75


# mark1_foreground black
# mark1_background #98d3cb
# mark2_foreground black
# mark2_background #f2dcd3
# mark3_foreground black
# mark3_background #f274bc

#: }}}

#: Advanced {{{

# shell .

#: The shell program to execute. The default value of . means to use
#: whatever shell is set as the default shell for the current user.
#: Note that on macOS if you change this, you might need to add
#: --login to ensure that the shell starts in interactive mode and
#: reads its startup rc files.

# editor .

#: The console editor to use when editing the kitty config file or
#: similar tasks. A value of . means to use the environment variables
#: VISUAL and EDITOR in that order. Note that this environment
#: variable has to be set not just in your shell startup scripts but
#: system-wide, otherwise kitty will not see it.

# close_on_child_death no

#: Close the window when the child process (shell) exits. If no (the
#: default), the terminal will remain open when the child exits as
#: long as there are still processes outputting to the terminal (for
#: example disowned or backgrounded processes). If yes, the window
#: will close as soon as the child process exits. Note that setting it
#: to yes means that any background processes still using the terminal
#: can fail silently because their stdout/stderr/stdin no longer work.

allow_remote_control yes

#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc.  Note that this even works over ssh
#: connections. You can chose to either allow any program running
#: within kitty to control it, with yes or only programs that connect
#: to the socket specified with the kitty --listen-on command line
#: option, if you use the value socket-only. The latter is useful if
#: you want to prevent programs running on a remote computer over ssh
#: from controlling kitty.

# listen_on none

#: Tell kitty to listen to the specified unix/tcp socket for remote
#: control connections. Note that this will apply to all kitty
#: instances. It can be overridden by the kitty --listen-on command
#: line flag. This option accepts only UNIX sockets, such as
#: unix:${TEMP}/mykitty or (on Linux) unix:@mykitty. Environment
#: variables are expanded. If {kitty_pid} is present then it is
#: replaced by the PID of the kitty process, otherwise the PID of the
#: kitty process is appended to the value, with a hyphen. This option
#: is ignored unless you also set allow_remote_control to enable
#: remote control. See the help for kitty --listen-on for more
#: details.

# env 

#: Specify environment variables to set in all child processes. Note
#: that environment variables are expanded recursively, so if you
#: use::

#:     env MYVAR1=a
#:     env MYVAR2=${MYVAR1}/${HOME}/b

#: The value of MYVAR2 will be a/<path to home directory>/b.

# update_check_interval 24

#: Periodically check if an update to kitty is available. If an update
#: is found a system notification is displayed informing you of the
#: available update. The default is to check every 24 hrs, set to zero
#: to disable.

# startup_session none

#: Path to a session file to use for all kitty instances. Can be
#: overridden by using the kitty --session command line option for
#: individual instances. See
#: https://sw.kovidgoyal.net/kitty/index.html#sessions in the kitty
#: documentation for details. Note that relative paths are interpreted
#: with respect to the kitty config directory. Environment variables
#: in the path are expanded.

# clipboard_control write-clipboard write-primary

#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: set of possible actions is: write-clipboard read-clipboard write-
#: primary read-primary. You can additionally specify no-append to
#: disable kitty's protocol extension for clipboard concatenation. The
#: default is to allow writing to the clipboard and primary selection
#: with concatenation enabled. Note that enabling the read
#: functionality is a security risk as it means that any program, even
#: one running on a remote server via SSH can read your clipboard.

# allow_hyperlinks yes

#: Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
#: escape sequences are ignored. Otherwise they become clickable
#: links, that you can click by holding down ctrl+shift and clicking
#: with the mouse. The special value of ``ask`` means that kitty will
#: ask before opening the link.

term xterm-kitty

#: The value of the TERM environment variable to set. Changing this
#: can break many terminal programs, only change it if you know what
#: you are doing, not because you read some advice on Stack Overflow
#: to change it. The TERM variable is used by various programs to get
#: information about the capabilities and behavior of the terminal. If
#: you change it, depending on what programs you run, and how
#: different the terminal you are changing it to is, various things
#: from key-presses, to colors, to various advanced features may not
#: work.

#: }}}

#: OS specific tweaks {{{

macos_quit_when_last_window_closed yes
macos_show_window_title_in none

#: }}}